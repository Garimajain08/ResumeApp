{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91876\\\\programming\\\\ResumeBuilderFrontendProject\\\\src\\\\Components\\\\InputComponents\\\\TextArea.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TextArea(props) {\n  _s();\n  const [value, setvalue] = useState(props.value);\n  const checkValidation = value => {\n    let warningMessage = \"\";\n    if (props.validation && value.length < props.validation.minLengthRequired) {\n      warningMessage = \"This field is required \";\n    } else if (props.validation && value.length > props.validation.maxLengthRequired) {\n      warningMessage = 'write upto ' + props.validation.maxLengthRequired + ' characters';\n    } else if (props.validation.checkType && props.validation.checkType === 'numeric') {\n      if (isNaN(value)) {\n        warningMessage = \"Only numeric values are allowed!\";\n      }\n    } else if (props.validation.checkType && props.validation.checkType === 'email') {\n      if (!/\\S+@\\S+\\.\\S+/.test(value)) {\n        warningMessage = \"Invalid Email address!\";\n      }\n    }\n    return warningMessage;\n  };\n  useEffect(() => {\n    if (props.validation && props.validation.required) {\n      if (value == '') {\n        props.onChange(value, 'field is required!');\n      }\n    }\n  }, []);\n  useEffect(() => {\n    let timerOutId;\n    if (value !== props.value && props.onChange) {\n      timerOutId = setTimeout(() => {\n        if (props.validation) {\n          let errorMessage = checkValidation(value);\n          props.onChange(value, errorMessage);\n        } else {\n          props.onChange(value, \"\");\n        }\n      }, 500);\n    }\n    return () => {\n      clearTimeout(timerOutId);\n    };\n  }, [value]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-100 h-100 position-relative\",\n    children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: true ? 'input-style' : 'input-style input-warning',\n      id: props.elementId,\n      rows: props.rows,\n      value: value,\n      onChange: e => {\n        setvalue(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(TextArea, \"dyiiY+r3UaF160Gh2FsMNjxcV1Q=\");\n_c = TextArea;\nexport default TextArea;\nvar _c;\n$RefreshReg$(_c, \"TextArea\");","map":{"version":3,"names":["React","useState","useEffect","TextArea","props","value","setvalue","checkValidation","warningMessage","validation","length","minLengthRequired","maxLengthRequired","checkType","isNaN","test","required","onChange","timerOutId","setTimeout","errorMessage","clearTimeout","elementId","rows","e","target"],"sources":["C:/Users/91876/programming/ResumeBuilderFrontendProject/src/Components/InputComponents/TextArea.js"],"sourcesContent":["import React,{useState,useEffect} from 'react'\r\n\r\nfunction TextArea(props) {\r\n    const [value, setvalue] = useState(props.value)\r\n    const checkValidation =(value)=>{\r\n        let warningMessage = \"\";\r\n        if(props.validation &&  value.length<props.validation.minLengthRequired){\r\n                warningMessage=\"This field is required \"\r\n        }\r\n        else if(props.validation &&  value.length>props.validation.maxLengthRequired){\r\n                warningMessage='write upto '+props.validation.maxLengthRequired+' characters'\r\n        }\r\n        else if(props.validation.checkType && props.validation.checkType==='numeric'){\r\n            if(isNaN(value)){\r\n                warningMessage=\"Only numeric values are allowed!\"\r\n            }\r\n        }\r\n        else if(props.validation.checkType && props.validation.checkType==='email'){\r\n            if(!(/\\S+@\\S+\\.\\S+/.test(value))){\r\n                warningMessage=\"Invalid Email address!\"\r\n            }\r\n        }\r\n        return warningMessage\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.validation && props.validation.required){\r\n            if(value==''){\r\n                props.onChange(value,'field is required!')\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n       let timerOutId;\r\n       \r\n       if(value !== props.value && props.onChange){\r\n            timerOutId = setTimeout(()=>{\r\n                if(props.validation){\r\n                    let errorMessage = checkValidation(value)\r\n                    props.onChange(value, errorMessage)\r\n                }\r\n                else{\r\n                    props.onChange(value, \"\")\r\n                }\r\n            },500)\r\n       }\r\n        return()=>{\r\n            clearTimeout(timerOutId)\r\n        }\r\n    }, [value])\r\n\r\n  return (\r\n    <div className='w-100 h-100 position-relative'>\r\n        {/* <div  style={true?{display:'block',position:'absolute', bottom:-20,color:\"rgb(247, 89, 89)\",}:{display:'none'}}>{warningMessage}</div> */}\r\n        <textarea\r\n            className={true?'input-style':'input-style input-warning'} \r\n            id={props.elementId}\r\n            rows={props.rows}\r\n            value={value}\r\n           \r\n            onChange ={(e)=>{\r\n                setvalue(e.target.value)\r\n            }}\r\n            \r\n        ></textarea>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TextArea\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAAA;AAE9C,SAASC,QAAQ,CAACC,KAAK,EAAE;EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAACG,KAAK,CAACC,KAAK,CAAC;EAC/C,MAAME,eAAe,GAAGF,KAAK,IAAG;IAC5B,IAAIG,cAAc,GAAG,EAAE;IACvB,IAAGJ,KAAK,CAACK,UAAU,IAAKJ,KAAK,CAACK,MAAM,GAACN,KAAK,CAACK,UAAU,CAACE,iBAAiB,EAAC;MAChEH,cAAc,GAAC,yBAAyB;IAChD,CAAC,MACI,IAAGJ,KAAK,CAACK,UAAU,IAAKJ,KAAK,CAACK,MAAM,GAACN,KAAK,CAACK,UAAU,CAACG,iBAAiB,EAAC;MACrEJ,cAAc,GAAC,aAAa,GAACJ,KAAK,CAACK,UAAU,CAACG,iBAAiB,GAAC,aAAa;IACrF,CAAC,MACI,IAAGR,KAAK,CAACK,UAAU,CAACI,SAAS,IAAIT,KAAK,CAACK,UAAU,CAACI,SAAS,KAAG,SAAS,EAAC;MACzE,IAAGC,KAAK,CAACT,KAAK,CAAC,EAAC;QACZG,cAAc,GAAC,kCAAkC;MACrD;IACJ,CAAC,MACI,IAAGJ,KAAK,CAACK,UAAU,CAACI,SAAS,IAAIT,KAAK,CAACK,UAAU,CAACI,SAAS,KAAG,OAAO,EAAC;MACvE,IAAG,CAAE,cAAc,CAACE,IAAI,CAACV,KAAK,CAAE,EAAC;QAC7BG,cAAc,GAAC,wBAAwB;MAC3C;IACJ;IACA,OAAOA,cAAc;EACzB,CAAC;EAEDN,SAAS,CAAC,MAAM;IACZ,IAAGE,KAAK,CAACK,UAAU,IAAIL,KAAK,CAACK,UAAU,CAACO,QAAQ,EAAC;MAC7C,IAAGX,KAAK,IAAE,EAAE,EAAC;QACTD,KAAK,CAACa,QAAQ,CAACZ,KAAK,EAAC,oBAAoB,CAAC;MAC9C;IACJ;EACJ,CAAC,EAAE,EAAE,CAAC;EAENH,SAAS,CAAC,MAAM;IACb,IAAIgB,UAAU;IAEd,IAAGb,KAAK,KAAKD,KAAK,CAACC,KAAK,IAAID,KAAK,CAACa,QAAQ,EAAC;MACtCC,UAAU,GAAGC,UAAU,CAAC,MAAI;QACxB,IAAGf,KAAK,CAACK,UAAU,EAAC;UAChB,IAAIW,YAAY,GAAGb,eAAe,CAACF,KAAK,CAAC;UACzCD,KAAK,CAACa,QAAQ,CAACZ,KAAK,EAAEe,YAAY,CAAC;QACvC,CAAC,MACG;UACAhB,KAAK,CAACa,QAAQ,CAACZ,KAAK,EAAE,EAAE,CAAC;QAC7B;MACJ,CAAC,EAAC,GAAG,CAAC;IACX;IACC,OAAM,MAAI;MACNgB,YAAY,CAACH,UAAU,CAAC;IAC5B,CAAC;EACL,CAAC,EAAE,CAACb,KAAK,CAAC,CAAC;EAEb,oBACE;IAAK,SAAS,EAAC,+BAA+B;IAAA,uBAE1C;MACI,SAAS,EAAE,IAAI,GAAC,aAAa,GAAC,2BAA4B;MAC1D,EAAE,EAAED,KAAK,CAACkB,SAAU;MACpB,IAAI,EAAElB,KAAK,CAACmB,IAAK;MACjB,KAAK,EAAElB,KAAM;MAEb,QAAQ,EAAImB,CAAC,IAAG;QACZlB,QAAQ,CAACkB,CAAC,CAACC,MAAM,CAACpB,KAAK,CAAC;MAC5B;IAAE;MAAA;MAAA;MAAA;IAAA;EAEM;IAAA;IAAA;IAAA;EAAA,QACV;AAEV;AAAC,GAlEQF,QAAQ;AAAA,KAARA,QAAQ;AAoEjB,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}